# syntax=docker/dockerfile:1.7
# Development Dockerfile for Next.js Web App
# Multi-stage build with separate installer and runner stages

# ===================================
# Stage 1: Base - Common dependencies
# ===================================
FROM oven/bun:1.3.0-alpine AS base

# Install system dependencies including build tools for native modules
RUN apk add --no-cache \
    libc6-compat \
    curl \
    bash \
    python3 \
    make \
    g++ \
    gcc \
    musl-dev

# Install Turbo globally
RUN bun install -g turbo@^2

WORKDIR /app

# ===================================
# Stage 2: Installer - Install dependencies
# ===================================
FROM base AS installer

# Copy workspace configuration files for dependency installation
COPY package.json bun.lock* ./
COPY turbo.json ./
COPY apps/web/package.json ./apps/web/
COPY packages/ ./packages/

# Install dependencies (this layer will be cached)
RUN bun install

# ===================================
# Stage 3: Runner - Development runtime
# ===================================
FROM base AS runner

# Install supervisor for process management
RUN apk add --no-cache supervisor

WORKDIR /app

# Copy installed dependencies from installer stage
COPY --from=installer /app/node_modules ./node_modules
COPY --from=installer /app/packages ./packages

# Copy supervisord configuration to a location outside the mount
COPY apps/web/supervisord.dev.conf /etc/supervisord.conf

# Set development environment
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# The actual source code will be mounted via docker-compose volumes
# This avoids all permission issues with bind mounts
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
